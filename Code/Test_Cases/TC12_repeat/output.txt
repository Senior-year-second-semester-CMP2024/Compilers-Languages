Lex(1) Data Type: int
Lex(1) Identifier: a
Lex(1) End Of Statement: ; 

	POP a
Lex(2) Command: print
Lex(2) Punctuators: (
Lex(2) String Value: "repeat loops"
	PUSH "repeat loops"
Lex(2) Punctuators: )
Value: "repeat loops"
Lex(2) End Of Statement: ; 

Lex(3) Identifier: a
Lex(3) Punctuators: =
Lex(3) Integer Value: 0
	PUSH 0
Lex(3) End Of Statement: ; 

	POP a
Lex(4) Control Flow: repeat
StartLabel_1:
Lex(5) Punctuators: {
Lex(6) Command: print
Lex(6) Punctuators: (
Lex(6) Identifier: a
Lex(6) Punctuators: )
Value: 0
Lex(6) End Of Statement: ; 

Lex(7) Identifier: a
Lex(7) Punctuators: =
Lex(7) Identifier: a
Lex(7) Arithmetic Operator: +
	PUSH a
Lex(7) Integer Value: 1
	PUSH 1
Lex(7) End Of Statement: ; 

	Addition
	POP a
Lex(8) Command: print
Lex(8) Punctuators: (
Lex(8) Identifier: a
Lex(8) Punctuators: )
Value: 1
Lex(8) End Of Statement: ; 

Lex(9) Punctuators: }
Lex(10) Control Flow: until
Lex(10) Punctuators: (
Lex(10) Identifier: a
Lex(10) Comparison Operator: ==
	PUSH a
Lex(10) Integer Value: 1
	PUSH 1
Lex(10) Punctuators: )
	EQ
Lex(10) End Of Statement: ; 

	JF Label_1
	JMP StartLabel_1
Label_1:
Lex(11) Control Flow: repeat
StartLabel_2:
Lex(12) Punctuators: {
Lex(13) Command: print
Lex(13) Punctuators: (
Lex(13) Identifier: a
Lex(13) Punctuators: )
Value: 1
Lex(13) End Of Statement: ; 

Lex(14) Identifier: a
Lex(14) Punctuators: =
Lex(14) Identifier: a
Lex(14) Arithmetic Operator: +
	PUSH a
Lex(14) Integer Value: 1
	PUSH 1
Lex(14) End Of Statement: ; 

	Addition
	POP a
Lex(15) Control Flow: if
Lex(15) Punctuators: (
Lex(15) Identifier: a
Lex(15) Comparison Operator: ==
	PUSH a
Lex(15) Integer Value: 1
	PUSH 1
Lex(15) Punctuators: )
	EQ
	JF Label_2
Lex(16) Punctuators: {
Lex(17) Command: print
Lex(17) Punctuators: (
Lex(17) Identifier: a
Lex(17) Punctuators: )
Value: 2
Lex(17) End Of Statement: ; 

Lex(18) Punctuators: }
	JMP EndLabel_1
Label_2:
Lex(19) Punctuators: }
EndLabel_1:
Lex(20) Control Flow: until
Lex(20) Punctuators: (
Lex(20) Identifier: a
Lex(20) Comparison Operator: ==
	PUSH a
Lex(20) Integer Value: 1
	PUSH 1
Lex(20) Punctuators: )
	EQ
Lex(20) End Of Statement: ; 

	JF Label_3
	JMP StartLabel_2
Label_3:
