Lex(1) Data Type: int
Lex(1) Identifier: a
Lex(1) Punctuators: =
Lex(1) Integer Value: 1
	PUSH 1
Lex(1) End Of Statement: ; 

	POP a
Lex(2) Data Type: int
Lex(2) Identifier: b
Lex(2) Punctuators: =
Lex(2) Integer Value: 0
	PUSH 0
Lex(2) End Of Statement: ; 

	POP b
Lex(3) Command: print
Lex(3) Punctuators: (
Lex(3) String Value: "More logic"
	PUSH "More logic"
Lex(3) Punctuators: )
Value: "More logic"
Lex(3) End Of Statement: ; 

Lex(4) Command: print
Lex(4) Punctuators: (
Lex(4) Logical Operator: !
Lex(4) Identifier: a
	PUSH a
	Negation or NOT
Lex(4) Punctuators: )
Value: 0
Lex(4) End Of Statement: ; 

Lex(4) InLine Comment: // 0
Lex(5) Data Type: bool
Lex(5) Identifier: x
Lex(5) Punctuators: =
Lex(5) Value: true
	PUSH 1
Lex(5) End Of Statement: ; 

	POP x
Lex(6) Data Type: bool
Lex(6) Identifier: y
Lex(6) Punctuators: =
Lex(6) value: false
	PUSH 0
Lex(6) End Of Statement: ; 

	POP y
Lex(7) Command: print
Lex(7) Punctuators: (
Lex(7) Identifier: x
Lex(7) Logical Operator: &&
	PUSH x
Lex(7) Identifier: y
Lex(7) Punctuators: )
	PUSH y
	Logical AND
Value: 0
Lex(7) End Of Statement: ; 

Lex(7) InLine Comment: // 0
Lex(8) Command: print
Lex(8) Punctuators: (
Lex(8) Punctuators: (
Lex(8) Identifier: x
Lex(8) Logical Operator: &&
	PUSH x
Lex(8) Identifier: x
Lex(8) Logical Operator: &&
	PUSH x
	Logical AND
Lex(8) Identifier: y
Lex(8) Punctuators: )
	PUSH y
	Logical AND
Lex(8) Logical Operator: ||
Lex(8) Identifier: x
Lex(8) Punctuators: )
	PUSH x
	Logical OR
Value: 1
Lex(8) End Of Statement: ; 

Lex(8) InLine Comment: // 1
Semantic error (8): Unused variable 'b'
