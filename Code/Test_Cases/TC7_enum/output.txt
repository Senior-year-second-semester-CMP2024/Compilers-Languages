Lex(1) Command: print
Lex(1) Punctuators: (
Lex(1) String Value: "enums"
	PUSH "enums"
Lex(1) Punctuators: )
Value: "enums"
Lex(1) End Of Statement: ; 

Lex(3) enum: enum
Lex(3) Identifier: W
	ENUM W
Lex(4) Punctuators: {
Lex(5) Identifier: H
Lex(5) Punctuators: ,
	PUSH 1
	POP H
Lex(6) Identifier: R
Lex(6) Punctuators: =
Lex(6) Integer Value: 10
	PUSH 10
Lex(6) Punctuators: ,
	POP R
Lex(7) Identifier: G
Lex(7) Punctuators: ,
	PUSH 2
	POP G
Lex(8) Identifier: B
Lex(8) Punctuators: =
Lex(8) Integer Value: 50
	PUSH 50
Lex(8) Punctuators: ,
	POP B
Lex(9) Identifier: K
Lex(10) Punctuators: }
	PUSH 3
	POP K
	ENDENUM W
Lex(10) End Of Statement: ; 

Lex(12) Data Type: int
Lex(12) Identifier: W
Lex(12) Identifier: x
Lex(12) Punctuators: =
Lex(12) Identifier: K
Lex(12) End Of Statement: ; 

	PUSH K
	POP x
Lex(13) Command: print
Lex(13) Punctuators: (
Lex(13) Identifier: x
Lex(13) Punctuators: )
Value: 51
Lex(13) End Of Statement: ; 

Lex(14) enum: enum
Lex(14) Identifier: L
	ENUM L
Lex(15) Punctuators: {
Lex(16) Identifier: M
Lex(16) Punctuators: ,
	PUSH 1
	POP M
Lex(17) Identifier: N
Lex(18) Punctuators: }
	PUSH 2
	POP N
	ENDENUM L
Lex(18) End Of Statement: ; 

Lex(20) Punctuators: {
Lex(21) Data Type: int
Lex(21) Identifier: W
Lex(21) Identifier: r
Lex(21) Punctuators: =
Lex(21) Integer Value: 1
	PUSH 1
Lex(21) End Of Statement: ; 

	POP r
Lex(22) Data Type: int
Lex(22) Identifier: W
Lex(22) Identifier: t
Lex(22) Punctuators: =
Lex(22) Integer Value: 10
	PUSH 10
Lex(22) End Of Statement: ; 

	POP t
Lex(23) Data Type: int
Lex(23) Identifier: W
Lex(23) Identifier: v
Lex(23) Punctuators: =
Lex(23) Integer Value: 3
	PUSH 3
Lex(23) Arithmetic Operator: +
Lex(23) Integer Value: 5
	PUSH 5
Lex(23) End Of Statement: ; 

	Addition
	POP v
Lex(24) Punctuators: }
Lex(26) Punctuators: {
Lex(27) Data Type: int
Lex(27) Identifier: C
Lex(27) End Of Statement: ; 

	POP C
Lex(28) Data Type: int
Lex(28) Identifier: C
Lex(28) Identifier: r
Lex(28) Punctuators: =
Lex(28) Integer Value: 1
	PUSH 1
Lex(28) End Of Statement: ; 

Semantic error (28): Type mismatch error
	POP r
Lex(29) Data Type: int
Lex(29) Identifier: C
Lex(29) Identifier: t
Lex(29) Punctuators: =
Lex(29) Integer Value: 10
	PUSH 10
Lex(29) End Of Statement: ; 

Semantic error (29): Type mismatch error
	POP t
Lex(30) Data Type: int
Lex(30) Identifier: C
Lex(30) Identifier: v
Lex(30) Punctuators: =
Lex(30) Integer Value: 3
	PUSH 3
Lex(30) Arithmetic Operator: +
Lex(30) Integer Value: 5
	PUSH 5
Lex(30) End Of Statement: ; 

	Addition
Semantic error (30): Type mismatch error
	POP v
Lex(31) Punctuators: }
Semantic error (31): Unused variable 'W'
Semantic error (31): Unused variable 'H'
Semantic error (31): Unused variable 'R'
Semantic error (31): Unused variable 'G'
Semantic error (31): Unused variable 'B'
Semantic error (31): Unused variable 'L'
Semantic error (31): Unused variable 'M'
Semantic error (31): Unused variable 'N'
Semantic error (31): Unused variable 'r'
Semantic error (31): Unused variable 't'
Semantic error (31): Unused variable 'v'
Semantic error (31): Unused variable 'C'
Semantic error (31): Unused variable 'r'
Semantic error (31): Unused variable 't'
Semantic error (31): Unused variable 'v'
